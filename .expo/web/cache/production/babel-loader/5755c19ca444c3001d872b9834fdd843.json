{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{useState,useEffect}from'react';import{useTranslation}from'next-i18next';import Modal from'../Common';import Code from'../../Code';var apiType={png:\"img\",svg:\"svg\"};var formatType={png:\"PNG\",svg:\"SVG\"};export default function EmbedModal(_ref){var onCancel=_ref.onCancel,config=_ref.config,imageType=_ref.imageType;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),url=_useState2[0],setUrl=_useState2[1];var _useTranslation=useTranslation(),t=_useTranslation.t;useEffect(function(){setUrl(process.env.NEXT_PUBLIC_URL+\"/api/\"+apiType[imageType]+\"/\"+btoa(JSON.stringify(config)));},[]);return React.createElement(Modal,{onCancel:onCancel},React.createElement(\"div\",{className:\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\"},React.createElement(\"div\",{className:\"my-2\"},React.createElement(\"h2\",{className:\"text-xl uppercase\"},formatType[imageType],\" URL\"),React.createElement(Code,{code:url})),React.createElement(\"div\",{className:\"my-2\"},React.createElement(\"h2\",{className:\"text-xl\"},\"<img>\"),React.createElement(Code,{code:\"<img src=\\\"\"+url+\"\\\" alt=\\\"notion avatar\\\">\"})),React.createElement(\"div\",{className:\"my-2\"},React.createElement(\"h2\",{className:\"text-xl\"},\"Markdown\"),React.createElement(Code,{code:\"![notion avatar](\"+url+\")\"})),React.createElement(\"p\",{className:\"mt-2 text-gray-500\"},\"*\",t(\"downloadTip\"))));}","map":{"version":3,"sources":["E:/scaffold-eth/packages/avatar-metaverse/src/pages/components/Modal/Embed/index.tsx"],"names":["useState","useEffect","useTranslation","Modal","Code","apiType","png","svg","formatType","EmbedModal","onCancel","config","imageType","url","setUrl","t","process","env","NEXT_PUBLIC_URL","btoa","JSON","stringify"],"mappings":"iEACA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,cAAT,KAA+B,cAA/B,CACA,MAAOC,CAAAA,KAAP,KAAkB,WAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,YAAjB,CAQA,GAAMC,CAAAA,OAAqB,CAAG,CAC5BC,GAAG,MADyB,CAE5BC,GAAG,MAFyB,CAA9B,CAKA,GAAMC,CAAAA,UAAwB,CAAG,CAC/BF,GAAG,MAD4B,CAE/BC,GAAG,MAF4B,CAAjC,CAKA,cAAe,SAASE,CAAAA,UAAT,MAIK,IAHlBC,CAAAA,QAGkB,MAHlBA,QAGkB,CAFlBC,MAEkB,MAFlBA,MAEkB,CADlBC,SACkB,MADlBA,SACkB,CAClB,cAAsBZ,QAAQ,IAA9B,wCAAOa,GAAP,eAAYC,MAAZ,eACA,oBAAcZ,cAAc,EAA5B,CAAQa,CAAR,iBAAQA,CAAR,CAEAd,SAAS,CAAC,UAAM,CACda,MAAM,CACDE,OAAO,CAACC,GAAR,CAAYC,eADX,SACkCb,OAAO,CAACO,SAAD,CADzC,KACwDO,IAAI,CAC9DC,IAAI,CAACC,SAAL,CAAeV,MAAf,CAD8D,CAD5D,CAAN,CAKD,CANQ,CAMN,EANM,CAAT,CAQA,MACE,qBAAC,KAAD,EAAO,QAAQ,CAAED,QAAjB,EACE,2BAAK,SAAS,CAAC,wCAAf,EACE,2BAAK,SAAS,CAAC,MAAf,EACE,0BAAI,SAAS,CAAC,mBAAd,EAAmCF,UAAU,CAACI,SAAD,CAA7C,QADF,CAEE,oBAAC,IAAD,EAAM,IAAI,CAAEC,GAAZ,EAFF,CADF,CAKE,2BAAK,SAAS,CAAC,MAAf,EACE,0BAAI,SAAS,CAAC,SAAd,UADF,CAEE,oBAAC,IAAD,EAAM,IAAI,eAAeA,GAAf,4BAAV,EAFF,CALF,CASE,2BAAK,SAAS,CAAC,MAAf,EACE,0BAAI,SAAS,CAAC,SAAd,aADF,CAEE,oBAAC,IAAD,EAAM,IAAI,qBAAsBA,GAAtB,IAAV,EAFF,CATF,CAaE,yBAAG,SAAS,CAAC,oBAAb,MAAoCE,CAAC,eAArC,CAbF,CADF,CADF,CAmBD","sourcesContent":["import { AvatarConfig, ImageApiType, ImageType } from '@/types';\r\nimport { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'next-i18next';\r\nimport Modal from '../Common';\r\nimport Code from '../../Code';\r\n\r\ntype EmbedModalProps = {\r\n  onCancel: () => void;\r\n  config: AvatarConfig;\r\n  imageType: ImageType;\r\n};\r\n\r\nconst apiType: ImageApiType = {\r\n  png: `img`,\r\n  svg: `svg`,\r\n};\r\n\r\nconst formatType: ImageApiType = {\r\n  png: `PNG`,\r\n  svg: `SVG`,\r\n};\r\n\r\nexport default function EmbedModal({\r\n  onCancel,\r\n  config,\r\n  imageType,\r\n}: EmbedModalProps) {\r\n  const [url, setUrl] = useState(``);\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    setUrl(\r\n      `${process.env.NEXT_PUBLIC_URL}/api/${apiType[imageType]}/${btoa(\r\n        JSON.stringify(config),\r\n      )}`,\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <Modal onCancel={onCancel}>\r\n      <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n        <div className=\"my-2\">\r\n          <h2 className=\"text-xl uppercase\">{formatType[imageType]} URL</h2>\r\n          <Code code={url} />\r\n        </div>\r\n        <div className=\"my-2\">\r\n          <h2 className=\"text-xl\">{`<img>`}</h2>\r\n          <Code code={`<img src=\"${url}\" alt=\"notion avatar\">`} />\r\n        </div>\r\n        <div className=\"my-2\">\r\n          <h2 className=\"text-xl\">Markdown</h2>\r\n          <Code code={`![notion avatar](${url})`} />\r\n        </div>\r\n        <p className=\"mt-2 text-gray-500\">*{t(`downloadTip`)}</p>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}